# Generated by Django 4.2 on 2023-10-15 17:52

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OwnerDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='owner_pictures/')),
                ('aadhar_number', models.CharField(max_length=12)),
                ('contact_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('model_name', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=50)),
                ('year_of_manufacture', models.PositiveIntegerField()),
                ('manufacturer', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ViolationList',
            fields=[
                ('violation_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('act', models.CharField(max_length=100)),
                ('fine_amount', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleViolationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('violation_date', models.DateField()),
                ('fine_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('uuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='randw.ownerdetails')),
                ('violation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='randw.violationlist')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField()),
                ('date', models.DateField()),
                ('location_latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('location_longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('uuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='randw.ownerdetails')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleAccident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('location_longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('time', models.DateTimeField()),
                ('uuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='randw.ownerdetails')),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chassis_number', models.CharField(max_length=17)),
                ('engine_number', models.CharField(max_length=15)),
                ('vehicle_type', models.CharField(max_length=50)),
                ('fuel_type', models.CharField(max_length=50)),
                ('vehicle_category', models.CharField(max_length=50)),
                ('seating_capacity', models.PositiveIntegerField()),
                ('date_of_registration', models.DateField()),
                ('date_of_expiry', models.DateField()),
                ('driving_limit', models.CharField(max_length=100)),
                ('uuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='randw.ownerdetails')),
            ],
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_id', models.CharField(max_length=20)),
                ('coverage_type', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('insurance_coverage_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('uuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='randw.ownerdetails')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(default=1, primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('ownerdetails', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='randw.ownerdetails')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
